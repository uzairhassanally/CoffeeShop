@model CoffeeShop.Models.Salary

@{
    ViewBag.Title = "SalaryEdit";
    Layout = "~/Views/Shared/Employee.cshtml";
}

<div class="main-content">
    <main>

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Salary</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.ID)

                <div class="form-group">
                    @Html.HiddenFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.HiddenFor(model => model.UserName, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.HiddenFor(model => model.Month, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.HiddenFor(model => model.Month, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Month, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.HiddenFor(model => model.To, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.HiddenFor(model => model.To, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.To, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.HiddenFor(model => model.TotalPay, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.HiddenFor(model => model.TotalPay, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TotalPay, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.HiddenFor(model => model.Pay, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.HiddenFor(model => model.Pay, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Pay, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.HiddenFor(model => model.Deductions, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.HiddenFor(model => model.Deductions, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Deductions, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.HiddenFor(model => model.DeductionReason, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.HiddenFor(model => model.DeductionReason, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DeductionReason, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.HiddenFor(model => model.Created, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.HiddenFor(model => model.Created, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Created, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("Status", new List<SelectListItem> {

                         new SelectListItem{Text="Recieved",Value ="Recieved"},
                         new SelectListItem{Text="Never Recieved",Value ="Never Recieved"},

                   })
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Back to List", "Salary")
        </div>

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
    </main>

</div>